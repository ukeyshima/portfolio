(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{84:function(e,t,n){"use strict";n.r(t);var i=n(2),o=n.n(i),r=n(3),a=n.n(r),c=n(4),s=n.n(c),u=n(5),l=n.n(u),f=n(6),v=n.n(f),d=n(0),h=n.n(d),p=n(24),m=n.n(p),g=n(926),R=n.n(g),A=n(927),E=n.n(A),F=function(e,t,n,i){var o=function(e,n){var i=t.createShader(n);if(t.shaderSource(i,e),t.compileShader(i),t.getShaderParameter(i,t.COMPILE_STATUS))return i;alert(t.getShaderInfoLog(i)),console.log(t.getShaderInfoLog(i))},r=function(e,n){var i=t.createProgram();return t.attachShader(i,e),t.attachShader(i,n),t.linkProgram(i),t.getProgramParameter(i,t.LINK_STATUS)?(t.useProgram(i),i):null}(o(n,t.VERTEX_SHADER),o(i,t.FRAGMENT_SHADER)),a=[];a[0]=t.getUniformLocation(r,"time"),a[1]=t.getUniformLocation(r,"resolution");var c,s,u=[0,2,1,1,2,3],l=[],f=[],v=(c=[-1,1,0,1,1,0,-1,-1,0,1,-1,0],s=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,s),t.bufferData(t.ARRAY_BUFFER,new Float32Array(c),t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,null),s);l[0]=t.getAttribLocation(r,"position"),f[0]=3;var d=function(e){var n=t.createBuffer();return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n),t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Int16Array(e),t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null),n}(u);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,d),t.clearColor(1,0,0,1);var h=(new Date).getTime();return function(){var n,i,o=.001*((new Date).getTime()-h);o%=3,t.clear(t.COLOR_BUFFER_BIT),t.uniform1f(a[0],o),t.uniform2fv(a[1],[e.width,e.height]),n=l,i=f,[v].forEach(function(e,o,r){t.bindBuffer(t.ARRAY_BUFFER,e),t.enableVertexAttribArray(n[o]),t.vertexAttribPointer(n[o],i[o],t.FLOAT,!1,0,0)}),t.drawElements(t.TRIANGLES,u.length,t.UNSIGNED_SHORT,0),t.flush()}},w=function(e){function t(e){var n;return o()(this,t),(n=s()(this,l()(t).call(this,e))).requestId=0,n}return v()(t,e),a()(t,[{key:"componentDidMount",value:function(){this.updateCanvas()}},{key:"componentWillUnmount",value:function(){cancelAnimationFrame(this.requestId)}},{key:"updateCanvas",value:function(){var e=this;this.canvas.width=this.props.style.width,this.canvas.height=this.props.style.height,this.gl=this.canvas.getContext("webgl");var t=F(this.canvas,this.gl,R()(),E()());!function n(){t(),e.requestId=requestAnimationFrame(n)}()}},{key:"handleResize",value:function(e,t){this.canvas.width=e,this.canvas.height=t,this.gl.viewport(0,0,e,t)}},{key:"render",value:function(){var e=this;return h.a.createElement("canvas",m()({},this.props,{ref:function(t){e.canvas=t}}))}}]),t}(h.a.Component),b=n(928),y=n.n(b);n.d(t,"default",function(){return x});var x=function(e){function t(e){var n;return o()(this,t),(n=s()(this,l()(t).call(this,e))).state={width:window.innerWidth,height:window.innerHeight},n}return v()(t,e),a()(t,[{key:"componentDidMount",value:function(){y.a.use(),this.tempHandleResize=this.handleResize.bind(this),window.addEventListener("resize",this.tempHandleResize)}},{key:"componentWillUnmount",value:function(){y.a.unuse(),window.removeEventListener("resize",this.tempHandleResize)}},{key:"handleResize",value:function(e){var t=e.target.innerWidth,n=e.target.innerHeight;this.refs.createCanvas.handleResize(t,n),this.setState({width:t,height:n})}},{key:"render",value:function(){return h.a.createElement(w,{ref:"createCanvas",style:{width:this.state.width,height:this.state.height}})}}]),t}(h.a.Component)},926:function(e,t){e.exports=function(){return["attribute vec3 position;","void main(void){","    gl_Position = vec4(position, 1.0);","}"].join("\n")}},927:function(e,t){e.exports=function(){return["precision mediump float;","uniform float time;","uniform vec2  resolution;","float random(vec3 p){","    return fract(sin(dot(p.xyz,vec3(12.9898,0.0,78.233)))*36.253);","}","float valueNoise(vec3 p){","    vec3 i=vec3(floor(p.x),p.y,floor(p.z));","    vec3 f=vec3(fract(p.x),p.y,fract(p.z));","    float f1=random(i);","    float f2=random(i+vec3(1.0,0.0,0.0));","    float f3=random(i+vec3(0.0,0.0,1.0));","    float f4=random(i+vec3(1.0,0.0,1.0));","    // f=smoothstep(0.0,1.0,f);","    f=f*f*(3.0-2.0*f);","    return (f1*(1.0-f.x)+f2*f.x)*(1.0-f.z)+(f3*(1.0-f.x)+f4*f.x)*f.z;","}","float octaveValueNoise(vec3 p){","float value=0.0;","float maxValue=0.0;","for(float i=0.0;i<9.0;i++){","    value+=pow(0.5,i)*valueNoise(vec3(p.x*pow(2.0,i),p.y,p.z*pow(2.0,i)));","    maxValue+=pow(0.5,i);","}","return value/maxValue;","}","float mountainDistFunc(vec3 p){","    vec3 pos=vec3(0.0,1.0,0.0);","    vec3 n=normalize(pos);","    return dot(p,n)/5.0+octaveValueNoise(p)/3.0;","}","float distFunc(vec3 p){","    float obj1;","    obj1=mountainDistFunc(p);","    return obj1;","}","vec3 genNormal(vec3 p){","    float d=0.001;","    return normalize(vec3(","        distFunc(p+vec3(d,0.0,0.0))-distFunc(p+vec3(-d,0.0,0.0)),","        distFunc(p+vec3(0.0,d,0.0))-distFunc(p+vec3(0.0,-d,0.0)),","        distFunc(p+vec3(0.0,0.0,d))-distFunc(p+vec3(0.0,0.0,-d))","        ));","}","void main(void){    ","    vec2 p = (gl_FragCoord.xy*2.0 - resolution) / min(resolution.x,resolution.y);    ","    vec3 lightPos=vec3(30.0,30.0,0.0);","    vec3 ambientColor=vec3(0.1);","    vec3 cPos=vec3(0.0,0.0,10.0);","    cPos.z=-3.0*time;","    vec3 cDir=vec3(0.0,-0.5,-1.0);","    vec3 cUp=vec3(0.0,1.0,0.0);","    vec3 cSide=cross(cDir,cUp);    ","    float targetDepth=1.0;","    vec3 ray=normalize(cSide*p.x+cUp*p.y+cDir*targetDepth);","    float distance=0.0;","    float rLen=0.0;","    vec3 rPos=cPos;","    vec3 color=vec3(242.0/255.0,242.0/255.0,232.0/255.0);","    float maxDist=100.0;","    for(int i=0;i<70;i++){","        distance=distFunc(rPos);","        if(abs(distance)<0.09){","            color=vec3(octaveValueNoise(vec3(rPos.x,0.0,0.0)),octaveValueNoise(vec3(rPos.x,0.0,rPos.z)),octaveValueNoise(vec3(0.0,0.0,rPos.z)));","            vec3 normal=genNormal(rPos);","            color=color*vec3(clamp(dot(lightPos,normal),0.0,1.0))+ambientColor+rLen/30.0;","            break;","        }","        rLen+=distance;","        rPos=cPos+ray*rLen;","        if(rLen>maxDist){","            break;","        }","    }    ","    gl_FragColor=vec4(color,1.0);","}"].join("\n")}},928:function(e,t,n){var i,o=0,r=n(929);"string"==typeof r&&(r=[[e.i,r,""]]),r.locals&&(t.locals=r.locals),t.use=t.ref=function(){return o++||(i=n(23)(r,{hmr:!0})),t},t.unuse=t.unref=function(){o>0&&!--o&&(i(),i=null)}},929:function(e,t,n){(e.exports=n(22)(!1)).push([e.i,"body {\n  margin: 0;\n  padding: 0;\n  overflow: hidden; }\n\n#root {\n  font-size: 0; }\n",""])}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,