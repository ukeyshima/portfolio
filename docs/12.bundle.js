(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{83:function(e,t,n){"use strict";n.r(t);var r=n(2),a=n.n(r),o=n(3),i=n.n(o),u=n(4),c=n.n(u),l=n(5),s=n.n(l),f=n(6),d=n.n(f),R=n(0),E=n.n(R),A=n(24),F=n.n(A),h=n(930),m=n.n(h),v=n(931),b=n.n(v),B=function(e,t,n,r){var a=function(e,n){var r=t.createShader(n);if(t.shaderSource(r,e),t.compileShader(r),t.getShaderParameter(r,t.COMPILE_STATUS))return r;alert(t.getShaderInfoLog(r)),console.log(t.getShaderInfoLog(r))},o=function(e){var n=t.createBuffer();return t.bindBuffer(t.ARRAY_BUFFER,n),t.bufferData(t.ARRAY_BUFFER,new Float32Array(e),t.DYNAMIC_COPY),t.bindBuffer(t.ARRAY_BUFFER,null),n},i=function(e,n){var r=t.createProgram();return t.attachShader(r,e),t.attachShader(r,n),t.transformFeedbackVaryings(r,["outPosition","outVelocity","outExistenceFrame","outAccel"],t.SEPARATE_ATTRIBS),t.linkProgram(r),t.getProgramParameter(r,t.LINK_STATUS)?(t.useProgram(r),r):null}(a(n,t.VERTEX_SHADER),a(r,t.FRAGMENT_SHADER)),u=[];u[0]=t.getUniformLocation(i,"pointSize"),u[1]=t.getUniformLocation(i,"frame"),u[2]=t.getUniformLocation(i,"resolution");for(var c=new Array(3e3).fill(0),l=[],s=[],f=new Array(3e3).fill(0),d=new Array(3e3).fill(0),R=new Array(1e3).fill(0),E=0;E<1e3;E++)s[E]=E,l[3*E]=Math.random()>.5?258e-7-1e-6*Math.random():1e-6*Math.random()-258e-7,l[3*E+1]=5e-5*Math.random(),l[3*E+2]=Math.random()>.5?258e-7-1e-6*Math.random():1e-6*Math.random()-258e-7;var A=[],F=[],h=o(c);A[0]=t.getAttribLocation(i,"position"),F[0]=3;var m=o(l);A[1]=t.getAttribLocation(i,"doubleAccel"),F[1]=3;var v=o(s);A[2]=t.getAttribLocation(i,"number"),F[2]=1;var b=o(f);A[3]=t.getAttribLocation(i,"velocity"),F[3]=3;var B=o(R);A[4]=t.getAttribLocation(i,"existenceFrame"),F[4]=1;var _=o(d);A[5]=t.getAttribLocation(i,"accel"),F[5]=3;var g,p=[t.createBuffer(),t.createBuffer(),t.createBuffer(),t.createBuffer()],T=[t.createTransformFeedback(),t.createTransformFeedback(),t.createTransformFeedback(),t.createTransformFeedback()];t.bindTransformFeedback(t.TRANSFORM_FEEDBACK,T[0]),t.bindTransformFeedback(t.TRANSFORM_FEEDBACK,T[1]),t.bindTransformFeedback(t.TRANSFORM_FEEDBACK,T[2]),t.bindTransformFeedback(t.TRANSFORM_FEEDBACK,T[3]),t.bindBuffer(t.ARRAY_BUFFER,p[0]),t.bufferData(t.ARRAY_BUFFER,3*Float32Array.BYTES_PER_ELEMENT*1e3,t.DYNAMIC_COPY),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindBuffer(t.ARRAY_BUFFER,p[1]),t.bufferData(t.ARRAY_BUFFER,3*Float32Array.BYTES_PER_ELEMENT*1e3,t.DYNAMIC_COPY),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindBuffer(t.ARRAY_BUFFER,p[2]),t.bufferData(t.ARRAY_BUFFER,1e3*Float32Array.BYTES_PER_ELEMENT,t.DYNAMIC_COPY),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindBuffer(t.ARRAY_BUFFER,p[3]),t.bufferData(t.ARRAY_BUFFER,3*Float32Array.BYTES_PER_ELEMENT*1e3,t.DYNAMIC_COPY),t.bindBuffer(t.ARRAY_BUFFER,null),t.activeTexture(t.TEXTURE0),function(){var e=document.createElement("canvas");e.width=300,e.height=300;var n=e.getContext("2d");n.beginPath();var r=n.createRadialGradient(e.width/2,e.height/2,0,e.width/2,e.height/2,e.width/2);r.addColorStop(0,"rgba(255,10,0,0.8)"),r.addColorStop(.5,"rgba(200,100,0,0.2)"),r.addColorStop(.9,"rgba(100,100,000,0.1)"),r.addColorStop(1,"rgba(255,255,255,0.0)"),n.fillStyle=r,n.arc(e.width/2,e.height/2,e.width/2,0,2*Math.PI,!1),n.fill();var a=new Image;a.addEventListener("load",function(){var e=t.createTexture();t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,e),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,a),t.generateMipmap(t.TEXTURE_2D),t.bindTexture(t.TEXTURE_2D,null),g=e}),a.src=e.toDataURL("image/png",1)}(),t.enable(t.BLEND),t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE),t.clearColor(242/255,242/255,232/255,1);var C=0;return function(){var n,r;t.clear(t.COLOR_BUFFER_BIT),t.bindTexture(t.TEXTURE_2D,g),t.uniform1f(u[0],10+(e.width-150)/50),t.uniform1f(u[1],C),t.uniform2fv(u[2],[e.width,e.height]),n=A,r=F,[h,m,v,b,B,_].forEach(function(e,a,o){t.bindBuffer(t.ARRAY_BUFFER,e),t.enableVertexAttribArray(n[a]),t.vertexAttribPointer(n[a],r[a],t.FLOAT,!1,0,0)}),t.bindBufferBase(t.TRANSFORM_FEEDBACK_BUFFER,0,p[0]),t.bindBufferBase(t.TRANSFORM_FEEDBACK_BUFFER,1,p[1]),t.bindBufferBase(t.TRANSFORM_FEEDBACK_BUFFER,2,p[2]),t.bindBufferBase(t.TRANSFORM_FEEDBACK_BUFFER,3,p[3]),t.beginTransformFeedback(t.POINTS),t.drawArrays(t.POINTS,0,1e3),t.endTransformFeedback(),t.bindBufferBase(t.TRANSFORM_FEEDBACK_BUFFER,0,null),t.bindBufferBase(t.TRANSFORM_FEEDBACK_BUFFER,1,null),t.bindBufferBase(t.TRANSFORM_FEEDBACK_BUFFER,2,null),t.bindBufferBase(t.TRANSFORM_FEEDBACK_BUFFER,3,null);var a=h;h=p[0],p[0]=a;var o=b;b=p[1],p[1]=o;var i=B;B=p[2],p[2]=i;var c=_;_=p[3],p[3]=c,t.flush(),C++}},_=function(e){function t(e){var n;return a()(this,t),(n=c()(this,s()(t).call(this,e))).requestId=0,n}return d()(t,e),i()(t,[{key:"componentDidMount",value:function(){this.updateCanvas()}},{key:"componentWillUnmount",value:function(){cancelAnimationFrame(this.requestId)}},{key:"updateCanvas",value:function(){var e=this;this.canvas.width=this.props.style.width,this.canvas.height=this.props.style.height,this.gl=this.canvas.getContext("webgl2");var t=B(this.canvas,this.gl,m()(),b()());!function n(){t(),e.requestId=requestAnimationFrame(n)}()}},{key:"handleResize",value:function(e,t){this.canvas.width=e,this.canvas.height=t,this.gl.viewport(0,0,e,t)}},{key:"render",value:function(){var e=this;return E.a.createElement("canvas",F()({},this.props,{ref:function(t){e.canvas=t}}))}}]),t}(E.a.Component),g=n(932),p=n.n(g);n.d(t,"default",function(){return T});var T=function(e){function t(e){var n;return a()(this,t),(n=c()(this,s()(t).call(this,e))).state={width:window.innerWidth,height:window.innerHeight},n}return d()(t,e),i()(t,[{key:"componentDidMount",value:function(){p.a.use(),this.tempHandleResize=this.handleResize.bind(this),window.addEventListener("resize",this.tempHandleResize)}},{key:"componentWillUnmount",value:function(){p.a.unuse(),window.removeEventListener("resize",this.tempHandleResize)}},{key:"handleResize",value:function(e){var t=e.target.innerWidth,n=e.target.innerHeight;this.refs.createCanvas.handleResize(t,n),this.setState({width:t,height:n})}},{key:"render",value:function(){return E.a.createElement(_,{ref:"createCanvas",style:{width:this.state.width,height:this.state.height}})}}]),t}(E.a.Component)},930:function(e,t){e.exports=function(){return["#version 300 es","layout (location=0)in vec3 position;","layout (location=1)in vec3 doubleAccel;","layout (location=2)in float number;","layout (location=3)in vec3 velocity; ","layout (location=4)in float existenceFrame;","layout (location=5)in vec3 accel;","uniform float pointSize;","uniform float frame;","uniform vec2 resolution;","out vec3 outPosition;","out vec3 outVelocity;","out float outExistenceFrame;","out vec3 outAccel;"," float rand(float co){","    return fract(sin(co*32.233) * 75.545);","}","void main(void){","    vec3 p=position.xyz;","   if(p.x>1.0||p.x<-1.0||p.y>1.0){","        vec3 a=vec3(0.0);","        a.x=doubleAccel.x>0.0?(-0.0018-(rand(number*0.01)*0.0001)):(0.0018+(rand(number*0.01)*0.0001));","        a.z=doubleAccel.z>0.0?(-0.0018-(rand(number*0.03)*0.0001)):(0.0018+(rand(number*0.03)*0.0001));","        outAccel=a;","        outExistenceFrame=0.0;","        vec3 v=vec3(0.0);","        v.x=a.x<0.0?0.048-(rand(number*0.02)*0.04):-0.048+(rand(number*0.02)*0.04);","        v.y=0.03-rand(number*0.01)*0.02;","        v.z=a.z<0.0?0.048-(rand(number*0.04)*0.04):-0.048+(rand(number*0.04)*0.04);","        outVelocity=v;","        outPosition=vec3((rand(number*0.06)*2.0-1.0)*0.1,-0.8+(rand(number*0.05)*2.0-1.0)*0.1,(rand(number*0.06)*2.0-1.0)*0.1);","    }else{","        outExistenceFrame=existenceFrame+1.0;","        outAccel=accel+doubleAccel;","        outVelocity=velocity+outAccel;","        outPosition=position+outVelocity;","    }","    gl_Position=vec4(outPosition,1.0);","    gl_PointSize=pointSize*rand(number*0.1)+existenceFrame/3.0;","}"].join("\n")}},931:function(e,t){e.exports=function(){return["#version 300 es","    precision highp float;","    uniform vec2 resolution;","    uniform float frame;","    uniform sampler2D tex;","    out vec4 outColor;","    in float outExistenceFrame;","    in vec3 outPosition;","float rand(float co){","    return fract(sin(co*78.233) * 435.5453);","}","void main(void){","    vec2 p=(gl_FragCoord.xy*2.0-resolution)/min(resolution.x,resolution.y);","    vec4 smpColor=texture(tex, gl_PointCoord);","    smpColor.g=4.0*sqrt(0.001-pow(outPosition.x,2.0)*pow(outPosition.y+0.9,2.0));","    smpColor*=outExistenceFrame/20.0;","    smpColor.a*=1.0-outExistenceFrame/50.0;","    smpColor.a*=4.0*sqrt(0.5-pow(outPosition.x,2.0));","    if(smpColor.a==0.0)discard;","    else outColor=smpColor+rand(p.y*frame)*0.2;","}"].join("\n")}},932:function(e,t,n){var r,a=0,o=n(933);"string"==typeof o&&(o=[[e.i,o,""]]),o.locals&&(t.locals=o.locals),t.use=t.ref=function(){return a++||(r=n(23)(o,{hmr:!0})),t},t.unuse=t.unref=function(){a>0&&!--a&&(r(),r=null)}},933:function(e,t,n){(e.exports=n(22)(!1)).push([e.i,"body {\n  margin: 0;\n  padding: 0;\n  overflow: hidden; }\n\n#root {\n  font-size: 0; }\n",""])}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,