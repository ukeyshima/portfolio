(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{82:function(e,n,i){"use strict";i.r(n);var t=i(2),r=i.n(t),o=i(3),a=i.n(o),c=i(4),v=i.n(c),u=i(5),s=i.n(u),f=i(6),d=i.n(f),l=i(0),m=i.n(l),h=i(24),p=i.n(h),g=i(934),R=i.n(g),w=i(935),A=i.n(w),E=function(e,n,i,t){var r=function(e,i){var t=n.createShader(i);if(n.shaderSource(t,e),n.compileShader(t),n.getShaderParameter(t,n.COMPILE_STATUS))return t;alert(n.getShaderInfoLog(t)),console.log(n.getShaderInfoLog(t))},o=function(e,i){var t=n.createProgram();return n.attachShader(t,e),n.attachShader(t,i),n.linkProgram(t),n.getProgramParameter(t,n.LINK_STATUS)?(n.useProgram(t),t):null}(r(i,n.VERTEX_SHADER),r(t,n.FRAGMENT_SHADER)),a=[];a[0]=n.getUniformLocation(o,"time"),a[1]=n.getUniformLocation(o,"resolution");var c,v,u=[0,2,1,1,2,3],s=[],f=[],d=(c=[-1,1,0,1,1,0,-1,-1,0,1,-1,0],v=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,v),n.bufferData(n.ARRAY_BUFFER,new Float32Array(c),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),v);s[0]=n.getAttribLocation(o,"position"),f[0]=3;var l=function(e){var i=n.createBuffer();return n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,i),n.bufferData(n.ELEMENT_ARRAY_BUFFER,new Int16Array(e),n.STATIC_DRAW),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null),i}(u);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,l),n.clearColor(1,0,0,1);var m=(new Date).getTime();return function(){var i,t,r=.001*((new Date).getTime()-m);n.clear(n.COLOR_BUFFER_BIT),n.uniform1f(a[0],r),n.uniform2fv(a[1],[e.width,e.height]),i=s,t=f,[d].forEach(function(e,r,o){n.bindBuffer(n.ARRAY_BUFFER,e),n.enableVertexAttribArray(i[r]),n.vertexAttribPointer(i[r],t[r],n.FLOAT,!1,0,0)}),n.drawElements(n.TRIANGLES,u.length,n.UNSIGNED_SHORT,0),n.flush()}},y=function(e){function n(e){var i;return r()(this,n),(i=v()(this,s()(n).call(this,e))).requestId=0,i}return d()(n,e),a()(n,[{key:"componentDidMount",value:function(){this.updateCanvas()}},{key:"componentWillUnmount",value:function(){cancelAnimationFrame(this.requestId)}},{key:"updateCanvas",value:function(){var e=this;this.canvas.width=this.props.style.width,this.canvas.height=this.props.style.height,this.gl=this.canvas.getContext("webgl");var n=E(this.canvas,this.gl,R()(),A()());!function i(){n(),e.requestId=requestAnimationFrame(i)}()}},{key:"handleResize",value:function(e,n){this.canvas.width=e,this.canvas.height=n,this.gl.viewport(0,0,e,n)}},{key:"render",value:function(){var e=this;return m.a.createElement("canvas",p()({},this.props,{ref:function(n){e.canvas=n}}))}}]),n}(m.a.Component),x=i(936),k=i.n(x);i.d(n,"default",function(){return F});var F=function(e){function n(e){var i;return r()(this,n),(i=v()(this,s()(n).call(this,e))).state={width:window.innerWidth,height:window.innerHeight},i}return d()(n,e),a()(n,[{key:"componentDidMount",value:function(){k.a.use(),this.tempHandleResize=this.handleResize.bind(this),window.addEventListener("resize",this.tempHandleResize)}},{key:"componentWillUnmount",value:function(){k.a.unuse(),window.removeEventListener("resize",this.tempHandleResize)}},{key:"handleResize",value:function(e){var n=e.target.innerWidth,i=e.target.innerHeight;this.refs.createCanvas.handleResize(n,i),this.setState({width:n,height:i})}},{key:"render",value:function(){return m.a.createElement(y,{ref:"createCanvas",style:{width:this.state.width,height:this.state.height}})}}]),n}(m.a.Component)},934:function(e,n){e.exports=function(){return["attribute vec3 position;","void main(void){","    gl_Position = vec4(position, 1.0);","}"].join("\n")}},935:function(e,n){e.exports=function(){return["precision mediump float;","uniform float time;","uniform vec2 resolution;","#define PI 3.141592","float random1(vec3 p){","    return fract(sin(dot(p.xyz,vec3(12.9898,46.2346,78.233)))*43758.5453123)*2.0-1.0;","}","float random2(vec3 p){","    return fract(sin(dot(p.xyz,vec3(73.6134,21.6712,51.5781)))*51941.3781931)*2.0-1.0;","}","float random3(vec3 p){","    return fract(sin(dot(p.xyz,vec3(39.1831,85.3813,16.2981)))*39183.4971731)*2.0-1.0;","}","float perlinNoise(vec3 p){","    vec3 i1=floor(p);    ","    vec3 i2=i1+vec3(1.0,0.0,0.0);","    vec3 i3=i1+vec3(0.0,1.0,0.0);","    vec3 i4=i1+vec3(1.0,1.0,0.0);","    vec3 i5=i1+vec3(0.0,0.0,1.0);","    vec3 i6=i1+vec3(1.0,0.0,1.0);","    vec3 i7=i1+vec3(0.0,1.0,1.0);","    vec3 i8=i1+vec3(1.0,1.0,1.0);","    vec3 f1=vec3(random1(i1),random2(i1),random3(i1));","    vec3 f2=vec3(random1(i2),random2(i2),random3(i2));","    vec3 f3=vec3(random1(i3),random2(i3),random3(i3));","    vec3 f4=vec3(random1(i4),random2(i4),random3(i4));","    vec3 f5=vec3(random1(i5),random2(i5),random3(i5));","    vec3 f6=vec3(random1(i6),random2(i6),random3(i6));","    vec3 f7=vec3(random1(i7),random2(i7),random3(i7));","    vec3 f8=vec3(random1(i8),random2(i8),random3(i8));","    vec3 k1=p-i1;","    vec3 k2=p-i2;","    vec3 k3=p-i3;","    vec3 k4=p-i4;","    vec3 k5=p-i5;","    vec3 k6=p-i6;","    vec3 k7=p-i7;","    vec3 k8=p-i8;","    vec3 j=fract(p);","    j=j*j*(3.0-2.0*j);","\treturn mix(mix(mix(dot(f1,k1),dot(f2,k2),j.x),mix(dot(f3,k3),dot(f4,k4),j.x),j.y),mix(mix(dot(f5,k5),dot(f6,k6),j.x),mix(dot(f7,k7),dot(f8,k8),j.x),j.y),j.z)*0.88+0.12;","}","float octavePerlinNoise(vec3 p){","float value=0.0;","float maxValue=0.0;","for(float i=0.0;i<5.0;i++){","    value+=pow(0.5,i)*perlinNoise(vec3(p.x*pow(2.0,i),p.y*pow(2.0,i),p.z*pow(2.0,i)));","    maxValue+=pow(0.5,i);","}","return value/maxValue;","}","float dist(vec2 p){","    float a=2.0;","    return sqrt(pow(p.x,a)+pow(p.y,a));","}","void main(void){    ","    vec2 p = 5.0*(gl_FragCoord.xy*2.0 - resolution.xy) / min(resolution.x,resolution.y);   ","    vec3 cDir=normalize(vec3(0.0,0.0,1.0));","    vec3 cUp=normalize(vec3(0.0,1.0,0.0));","    float dipth=1.0;","    vec3 cSide=normalize(cross(cDir,cUp));","    vec3 ray=normalize(cSide*p.x+cUp*p.y+cDir*dipth);     ","    vec3 color=vec3(0.0);","    vec3 c=vec3(0.0,0.0,0.0+time);","    for(float i=0.0;i<5.0;i++){          ","        color+=octavePerlinNoise(c)*vec3(0.8,0.2,0.001)*(50.0/pow(length(p),5.0));","        c+=ray;","    }    ","    gl_FragColor=vec4(color,1.0);","}"].join("\n")}},936:function(e,n,i){var t,r=0,o=i(937);"string"==typeof o&&(o=[[e.i,o,""]]),o.locals&&(n.locals=o.locals),n.use=n.ref=function(){return r++||(t=i(23)(o,{hmr:!0})),n},n.unuse=n.unref=function(){r>0&&!--r&&(t(),t=null)}},937:function(e,n,i){(e.exports=i(22)(!1)).push([e.i,"body {\n  margin: 0;\n  padding: 0;\n  overflow: hidden; }\n\n#root {\n  font-size: 0; }\n",""])}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,