(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{72:function(e,t,o){"use strict";o.r(t);var n,r,i,a,s,u,c,l,h,d,p,g,f,y,v,b,m,w,A,k,S,T,E,M,z,P,W,R,x,O,U,C,D,H,L,F,Y,B,j,X,I,G,N,K,V,J,q,Z,Q,$,_,ee,te,oe,ne,re,ie,ae,se,ue,ce,le,he,de,pe,ge,fe,ye,ve,be,me,we,Ae,ke,Se,Te,Ee,Me,ze,Pe=o(2),We=o.n(Pe),Re=o(3),xe=o.n(Re),Oe=o(4),Ue=o.n(Oe),Ce=o(5),De=o.n(Ce),He=o(6),Le=o.n(He),Fe=o(0),Ye=o.n(Fe),Be=o(15),je=Object(Be.b)(function(e,t){var o=e.state;return{headerHeight:o.headerHeight,windowWidth:o.windowWidth}})(n=Object(Be.c)(n=function(e){function t(){return We()(this,t),Ue()(this,De()(t).apply(this,arguments))}return Le()(t,e),xe()(t,[{key:"render",value:function(){return Ye.a.createElement("div",{"touch-action":"none",style:{width:this.props.windowWidth,height:this.props.headerHeight,backgroundColor:"#ddd"}})}}]),t}(Ye.a.Component))||n)||n,Xe=o(958),Ie=o.n(Xe),Ge=o(959),Ne=o.n(Ge),Ke=function(e){e.clear(e.COLOR_BUFFER_BIT),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),e.flush()},Ve=Object(Be.b)(function(e,t){return{updateColor:e.state.updateColor}})(r=function(e){function t(e){var o;return We()(this,t),(o=Ue()(this,De()(t).call(this,e))).handleMouseDown=function(e){var t=o.gl,n=e.nativeEvent,r=new Uint8Array(4);Ke(t),t.readPixels(n.layerX,o.props.style.height-n.layerY,1,1,t.RGBA,t.UNSIGNED_BYTE,r),o.props.updateColor([r[0],r[1],r[2]]),o.setState({mouseX:n.layerX,mouseY:n.layerY})},o.state={mouseX:10,mouseY:10},o}return Le()(t,e),xe()(t,[{key:"componentDidMount",value:function(){var e=this.canvas;e.width=this.props.style.width,e.height=this.props.style.height,this.gl=e.getContext("webgl"),function(e,t,o,n){var r=function(e,o){var n=t.createShader(o);if(t.shaderSource(n,e),t.compileShader(n),t.getShaderParameter(n,t.COMPILE_STATUS))return n;alert(t.getShaderInfoLog(n)),console.log(t.getShaderInfoLog(n))},i=function(e,o){var n=t.createProgram();return t.attachShader(n,e),t.attachShader(n,o),t.linkProgram(n),t.getProgramParameter(n,t.LINK_STATUS)?(t.useProgram(n),n):null}(r(o,t.VERTEX_SHADER),r(n,t.FRAGMENT_SHADER)),a=[],s=[],u=[];a[0]=t.getUniformLocation(i,"resolution");var c,l,h=(c=[-1,1,0,1,1,0,-1,-1,0,1,-1,0],l=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,l),t.bufferData(t.ARRAY_BUFFER,new Float32Array(c),t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,null),l);s[0]=t.getAttribLocation(i,"position"),u[0]=3,function(e,o,n){e.forEach(function(e,r,i){t.bindBuffer(t.ARRAY_BUFFER,e),t.enableVertexAttribArray(o[r]),t.vertexAttribPointer(o[r],n[r],t.FLOAT,!1,0,0)})}([h],s,u);var d=function(e){var o=t.createBuffer();return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,o),t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Int16Array(e),t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null),o}([0,2,1,1,2,3]);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,d),t.uniform2fv(a[0],[e.width,e.height]),t.clearColor(0,0,0,1),Ke(t)}(e,this.gl,Ie()(),Ne()())}},{key:"render",value:function(){var e=this;return Ye.a.createElement("div",{"touch-action":"none",style:{position:"relative"}},Ye.a.createElement("canvas",{style:this.props.style,ref:function(t){e.canvas=t},onMouseDown:this.handleMouseDown,onTouchStart:this.handleMouseDown}),Ye.a.createElement("svg",{style:{position:"absolute",width:10,height:10,left:this.state.mouseX-5,top:this.state.mouseY-5}},Ye.a.createElement("circle",{cx:"5",cy:"5",r:"5",fill:"#fff",stroke:"#000"})))}}]),t}(Ye.a.Component))||r,Je=Object(Be.b)(function(e,t){var o=e.state;return{updateStrokeWidth:o.updateStrokeWidth,strokeWidth:o.strokeWidth}})(i=function(e){function t(){var e,o;We()(this,t);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(o=Ue()(this,(e=De()(t)).call.apply(e,[this].concat(r)))).handleChange=function(e){var t=e.nativeEvent;o.props.updateStrokeWidth(t.target.value)},o}return Le()(t,e),xe()(t,[{key:"render",value:function(){return Ye.a.createElement("div",{style:this.props.style},Ye.a.createElement("input",{"touch-action":"auto",type:"range",min:"1",max:"100",step:"1",value:this.props.strokeWidth,style:{WebkitAppearance:"none",MozAppearance:"none",backgroundColor:"#000",height:2,width:"90%",outline:0,position:"absolute",top:"50%",left:"5%",margin:0},onChange:this.handleChange,onInput:this.handleChange}))}}]),t}(Ye.a.Component))||i,qe=Object(Be.b)(function(e,t){var o=e.state;return{sizeRatio:o.sizeRatio,previewPropertyAreaWidth:o.strokeWidth,previewStrokeWidth:o.previewStrokeWidth,color:o.color,brushEvent:o.brushEvent}})(a=function(e){function t(){var e,o;We()(this,t);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(o=Ue()(this,(e=De()(t)).call.apply(e,[this].concat(r)))).handleClick=function(){o.props.brushEvent()},o}return Le()(t,e),xe()(t,[{key:"render",value:function(){return Ye.a.createElement("div",{style:this.props.style,onClick:this.handleClick,onTouchStart:this.handleClick},Ye.a.createElement("div",{style:{position:"absolute",left:"50%",top:"50%",transform:"translate(-50%, -50%)",width:this.props.previewStrokeWidth,height:this.props.previewStrokeWidth,borderRadius:"50%",backgroundColor:this.props.color}}))}}]),t}(Ye.a.Component))||a,Ze=o(105),Qe=Object(Be.b)(function(e,t){return{rectEvent:e.state.rectEvent}})(s=function(e){function t(){var e,o;We()(this,t);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(o=Ue()(this,(e=De()(t)).call.apply(e,[this].concat(r)))).handleClick=function(){o.props.rectEvent()},o}return Le()(t,e),xe()(t,[{key:"render",value:function(){return Ye.a.createElement("div",{style:this.props.style,onClick:this.handleClick,onTouchStart:this.handleClick},Ye.a.createElement(Ze.FaSquareFull,null))}}]),t}(Ye.a.Component))||s,$e=Object(Be.b)(function(e,t){return{circleEvent:e.state.circleEvent}})(u=function(e){function t(){var e,o;We()(this,t);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(o=Ue()(this,(e=De()(t)).call.apply(e,[this].concat(r)))).handleClick=function(){o.props.circleEvent()},o}return Le()(t,e),xe()(t,[{key:"render",value:function(){return Ye.a.createElement("div",{style:this.props.style,onClick:this.handleClick,onTouchStart:this.handleClick},Ye.a.createElement(Ze.FaCircle,null))}}]),t}(Ye.a.Component))||u,_e=Object(Be.b)(function(e,t){return{lineEvent:e.state.lineEvent}})(c=function(e){function t(){var e,o;We()(this,t);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(o=Ue()(this,(e=De()(t)).call.apply(e,[this].concat(r)))).handleClick=function(){o.props.lineEvent()},o}return Le()(t,e),xe()(t,[{key:"render",value:function(){return Ye.a.createElement("div",{style:this.props.style,onClick:this.handleClick,onTouchStart:this.handleClick},Ye.a.createElement(Ze.FaSlash,null))}}]),t}(Ye.a.Component))||c,et=o(960),tt=o.n(et),ot=o(961),nt=o.n(ot),rt=function(e,t,o){var n;n=t,Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2])<.01?e.clearColor(1,1,1,0):e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.uniform3fv(o[1],t),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),e.flush()},it=Object(Be.b)(function(e,t){var o=e.state;return{colorArray:o.colorArray,updateOpacity:o.updateOpacity,updateOpacityAreaRender:o.updateOpacityAreaRender,updateOpacityAreaGlContext:o.updateOpacityAreaGlContext,updateOpacityAreaUniLocation:o.updateOpacityAreaUniLocation}})(l=function(e){function t(e){var o;return We()(this,t),(o=Ue()(this,De()(t).call(this,e))).handleMouseDown=function(e){var t=e.nativeEvent,n=o.props.colorArray;rt(o.gl,n.map(function(e){return e/255}),o.uniLocation);var r=new Uint8Array(4);o.gl.readPixels(t.layerX,o.props.style.height-t.layerY,1,1,o.gl.RGBA,o.gl.UNSIGNED_BYTE,r),o.props.updateOpacity(r[3]/255),o.setState({mouseX:t.layerX,mouseY:t.layerY})},o.state={mouseX:o.props.style.width,mouseY:o.props.style.height/2+5},o}return Le()(t,e),xe()(t,[{key:"componentDidMount",value:function(){this.canvas.width=this.props.style.width,this.canvas.height=this.props.style.height,this.gl=this.canvas.getContext("webgl"),this.uniLocation=function(e,t,o,n,r){var i=function(e,o){var n=t.createShader(o);if(t.shaderSource(n,e),t.compileShader(n),t.getShaderParameter(n,t.COMPILE_STATUS))return n;alert(t.getShaderInfoLog(n)),console.log(t.getShaderInfoLog(n))},a=function(e,o){var n=t.createProgram();return t.attachShader(n,e),t.attachShader(n,o),t.linkProgram(n),t.getProgramParameter(n,t.LINK_STATUS)?(t.useProgram(n),n):null}(i(o,t.VERTEX_SHADER),i(n,t.FRAGMENT_SHADER)),s=[],u=[],c=[];s[0]=t.getUniformLocation(a,"resolution"),s[1]=t.getUniformLocation(a,"color");var l,h,d=(l=[-1,1,0,1,1,0,-1,-1,0,1,-1,0],h=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,h),t.bufferData(t.ARRAY_BUFFER,new Float32Array(l),t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,null),h);u[0]=t.getAttribLocation(a,"position"),c[0]=3,function(e,o,n){e.forEach(function(e,r,i){t.bindBuffer(t.ARRAY_BUFFER,e),t.enableVertexAttribArray(o[r]),t.vertexAttribPointer(o[r],n[r],t.FLOAT,!1,0,0)})}([d],u,c);var p=function(e){var o=t.createBuffer();return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,o),t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Int16Array(e),t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null),o}([0,2,1,1,2,3]);return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,p),t.uniform2fv(s[0],[e.width,e.height]),t.uniform3fv(s[1],r),t.enable(t.BLEND),t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE),rt(t,r,s),s}(this.canvas,this.gl,tt()(),nt()(),this.props.colorArray.map(function(e){return e/255})),this.props.updateOpacityAreaGlContext(this.gl),this.props.updateOpacityAreaUniLocation(this.uniLocation),this.props.updateOpacityAreaRender(rt)}},{key:"render",value:function(){var e=this;return Ye.a.createElement("div",{"touch-action":"none",style:{margin:0,padding:0,height:this.props.style.height,position:"relative"}},Ye.a.createElement("canvas",{style:this.props.style,ref:function(t){e.canvas=t},onMouseDown:this.handleMouseDown,onTouchStart:this.handleMouseDown}),Ye.a.createElement("svg",{style:{position:"absolute",width:10,height:10,left:this.state.mouseX-5,top:this.state.mouseY-5}},Ye.a.createElement("circle",{cx:"5",cy:"5",r:"5",fill:"#fff",stroke:"#000"})))}}]),t}(Ye.a.Component))||l,at=Object(Be.b)(function(e,t){return{colorPickerEvent:e.state.colorPickerEvent}})(h=function(e){function t(){var e,o;We()(this,t);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(o=Ue()(this,(e=De()(t)).call.apply(e,[this].concat(r)))).handleClick=function(){o.props.colorPickerEvent()},o}return Le()(t,e),xe()(t,[{key:"render",value:function(){return Ye.a.createElement("div",{style:this.props.style,onClick:this.handleClick,onTouchStart:this.handleClick},Ye.a.createElement(Ze.FaEyeDropper,null))}}]),t}(Ye.a.Component))||h,st=Object(Be.b)(function(e,t){return{clearEvent:e.state.clearEvent}})(d=function(e){function t(){var e,o;We()(this,t);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(o=Ue()(this,(e=De()(t)).call.apply(e,[this].concat(r)))).handleClick=function(){o.props.clearEvent()},o}return Le()(t,e),xe()(t,[{key:"render",value:function(){return Ye.a.createElement("div",{style:this.props.style,onClick:this.handleClick,onTouchStart:this.handleClick},Ye.a.createElement(Ze.FaCuttlefish,null))}}]),t}(Ye.a.Component))||d,ut=Object(Be.b)(function(e,t){var o=e.state;return{color:o.color,backgroundBrush:o.background.brush,backgroundRect:o.background.rect,backgroundCircle:o.background.circle,backgroundLine:o.background.line,backgroundColorPicker:o.background.colorPicker,backgroundClear:o.background.clear}})(p=function(e){function t(){return We()(this,t),Ue()(this,De()(t).apply(this,arguments))}return Le()(t,e),xe()(t,[{key:"render",value:function(){return Ye.a.createElement("div",{style:this.props.style},Ye.a.createElement(Ve,{style:{width:this.props.style.width,height:this.props.style.width,backgroundColor:"#000"}}),Ye.a.createElement(it,{ref:"opacityPropertyArea",style:{backgroundColor:"#222",width:this.props.style.width,height:13,textAlign:"center",margin:0,padding:0}}),Ye.a.createElement(Je,{style:{width:this.props.style.width,height:30,textAlign:"center",position:"relative"}}),Ye.a.createElement(qe,{ref:"previewPropertyArea",style:{position:"relative",width:this.props.style.width,height:this.props.style.width,backgroundColor:this.props.backgroundBrush}}),Ye.a.createElement(Qe,{style:{margin:"3px 2px 1px 1px",width:this.props.style.width/2-3,height:40,backgroundColor:this.props.backgroundRect,color:this.props.color,fontSize:20,textAlign:"center",float:"left",lineHeight:"225%"}}),Ye.a.createElement($e,{style:{margin:"3px 1px 1px 2px",width:this.props.style.width/2-3,height:40,backgroundColor:this.props.backgroundCircle,color:this.props.color,fontSize:20,textAlign:"center",float:"left",lineHeight:"225%"}}),Ye.a.createElement(_e,{style:{margin:"2px 2px 1px 1px",width:this.props.style.width/2-3,height:40,backgroundColor:this.props.backgroundLine,color:this.props.color,fontSize:20,textAlign:"center",float:"left",lineHeight:"225%"}}),Ye.a.createElement(at,{style:{margin:"2px 1px 1px 2px",width:this.props.style.width/2-3,height:40,backgroundColor:this.props.backgroundColorPicker,color:this.props.color,fontSize:20,textAlign:"center",float:"left",lineHeight:"225%"}}),Ye.a.createElement(st,{style:{margin:"2px 2px 1px 1px",width:this.props.style.width/2-3,height:40,backgroundColor:this.props.backgroundClear,color:this.props.color,fontSize:20,textAlign:"center",float:"left",lineHeight:"225%"}}))}}]),t}(Ye.a.Component))||p,ct=function(){function e(t,o){We()(this,e),this.branchId=0,this.undoStack=[this.undoStackObj(null,t,o,this.branchId,null,[],1)],this.redoStack=[],this.undoStack[0].id=0,this.id=0}return xe()(e,[{key:"undoStackObj",value:function(e,t,o,n,r,i,a){return{delta:e,img:t,state:o,branchId:n,frontStack:r,nextStack:i,stackWidth:a}}},{key:"undo",value:function(){if(this.hasUndoStack()){console.log("undo!");var e=this.undoStack.pop();this.redoStack.push(e)}else console.log("can't undo!")}},{key:"redo",value:function(){if(this.hasRedoStack()){console.log("redo!");var e=this.redoStack.pop();this.undoStack.push(e)}else console.log("can't redo!")}},{key:"execute",value:function(e,t,o){this.redoStack=[];var n=this.lastUndoStack();n.nextStack.length>0?(!function e(t){t.branchId=0,t.nextStack.length>1||0==t.nextStack.length||e(t.nextStack[0])}(n.nextStack[0]),this.branchId=n.nextStack.length):this.branchId=n.branchId,this.undoStack.push(this.undoStackObj(e,t,o,this.branchId,n,[],1)),n.nextStack.push(this.lastUndoStack()),n.nextStack.length>1&&this.updateStackWidth(n),this.id++,this.lastUndoStack().id=this.id}},{key:"unbra",value:function(){var e=Object.assign({},this.lastUndoStack()),t=this.undoStack,o=t.concat().filter(function(e){return e.nextStack.length>1}),n=o.map(function(e){return e.branchId});n.push(e.branchId);var r=n.concat().reverse().find(function(e){return e>0}),i=o[n.lastIndexOf(r)-1];if(i){console.log("unbra!");for(var a=r-1,s=t.lastIndexOf(i),u=t.length-s-1,c=0;c<u;c++)this.undo();!function e(o){t.push(o),0!==o.nextStack.length&&e(o.nextStack[o.nextStack.length-1])}(i.nextStack[a]),this.redoStack=[]}else console.log("can't unbra!")}},{key:"rebra",value:function(){var e=Object.assign({},this.lastUndoStack()),t=this.undoStack,o=t.concat().filter(function(e){return e.nextStack.length>1}),n=o.map(function(e){return e.branchId});n.push(e.branchId);var r=0,i=o.concat().reverse().find(function(e,t){return r=n.concat().reverse()[t]+1,e.nextStack.length>n.concat().reverse()[t]+1});if(i){console.log("rebra!");for(var a=t.lastIndexOf(i),s=t.length-a-1,u=0;u<s;u++)this.undo();!function e(o){t.push(o),0!==o.nextStack.length&&e(o.nextStack[0])}(i.nextStack[r]),this.redoStack=[]}else console.log("can't rebra!")}},{key:"recomposeUndoStack",value:function(e){for(var t=[],o=this,n=this.undoStack,r=function e(o){return t.unshift(o),o.frontStack?n.some(function(e){return e===o.frontStack})?o.frontStack:e(o.frontStack):o}(e),i=n.lastIndexOf(r),a=n.length-i-1,s=0;s<a;s++)this.undo();!function n(r,i){o.undoStack.push(r),r!==e&&n(t[i+1],i+1)}(t[0],0),this.redoStack=[],function e(t){0!==t.nextStack.length&&(o.redoStack.unshift(t.nextStack[0]),e(t.nextStack[0]))}(this.lastUndoStack())}},{key:"hasUndoStack",value:function(){return this.undoStack.length>1}},{key:"hasRedoStack",value:function(){return this.redoStack.length>0}},{key:"lastUndoStack",value:function(){return this.undoStack[this.undoStack.length-1]}},{key:"isBranchPoint",value:function(e){return e.nextStack.length>1}},{key:"updateStackWidth",value:function(e){e.stackWidth++;var t=e.frontStack;t&&this.updateStackWidth(t)}},{key:"getNextBranchPoint",value:function(e){return e.nextStack.length>1||0==e.nextStack.length?e:this.getNextBranchPoint(e.nextStack[0])}}]),e}(),lt=Object(Be.b)(function(e){var t=e.state;return{drawAreaPositionX:t.drawAreaPosition.x,drawAreaPositionY:t.drawAreaPosition.y,updateDrawAreaPosition:t.updateDrawAreaPosition}})(g=Object(Be.c)(g=function(e){function t(e){var o;return We()(this,t),(o=Ue()(this,De()(t).call(this,e))).handleMouseAndTouchDown=function(e){document.body.addEventListener("mousemove",o.handleMouseAndTouchMove),document.body.addEventListener("touchmove",o.handleMouseAndTouchMove),document.body.addEventListener("mouseup",o.handleMouseAndTouchUp),document.body.addEventListener("touchend",o.handleMouseAndTouchUp),o.setState({x:"changedTouches"in e?e.changedTouches[0].pageX:e.pageX,y:"changedTouches"in e?e.changedTouches[0].pageY:e.pageY})},o.handleMouseAndTouchMove=function(e){o.props.updateDrawAreaPosition(o.props.drawAreaPositionX+("changedTouches"in e?e.changedTouches[0].pageX:e.pageX)-o.state.x,o.props.drawAreaPositionY+("changedTouches"in e?e.changedTouches[0].pageY:e.pageY)-o.state.y),o.setState({x:"changedTouches"in e?e.changedTouches[0].pageX:e.pageX,y:"changedTouches"in e?e.changedTouches[0].pageY:e.pageY})},o.handleMouseAndTouchUp=function(){document.body.removeEventListener("mousemove",o.handleMouseAndTouchMove),document.body.removeEventListener("touchmove",o.handleMouseAndTouchMove),document.body.removeEventListener("mouseup",o.handleMouseAndTouchUp),document.body.removeEventListener("touchend",o.handleMouseAndTouchUp)},o.state={x:0,y:0},o}return Le()(t,e),xe()(t,[{key:"render",value:function(){return Ye.a.createElement("div",{"touch-action":"none",onMouseDown:this.handleMouseAndTouchDown,onTouchStart:this.handleMouseAndTouchDown,style:this.props.style})}}]),t}(Ye.a.Component))||g)||g,ht=function(e,t,o,n){return Math.sqrt((e-o)*(e-o)+(t-n)*(t-n))},dt=Object(Be.b)(function(e,t){var o=e.state;return{undoManager:o.undoManager,updateUndoManager:o.updateUndoManager,undo:o.undo,redo:o.redo,unbra:o.unbra,rebra:o.rebra,updateUpdateRenderFunction:o.updateUpdateRenderFunction,strokeWidth:o.strokeWidth,sizeRatio:o.sizeRatio,color:o.color,updateColor:o.updateColor,flagBrush:o.flag.brush,flagRect:o.flag.rect,flagCircle:o.flag.circle,flagLine:o.flag.line,flagColorPicker:o.flag.colorPicker,flagClear:o.flag.clear,updateClearFunction:o.updateClearFunction,visualizeTreeUndo:o.visualizeTreeUndo,imgSize:o.imgSize,drawAreaWidth:o.drawAreaWidth,drawAreaPositionY:o.drawAreaPosition.y,drawAreaPositionX:o.drawAreaPosition.x,headerHeight:o.headerHeight}})(f=Object(Be.c)(f=function(e){function t(e){var o;return We()(this,t),(o=Ue()(this,De()(t).call(this,e))).handleMouseDown=function(e){var t=o.state.context,n=((e.hasOwnProperty("changedTouches")?e.changedTouches[0].pageX:e.pageX)-o.props.drawAreaPositionX)/o.props.sizeRatio,r=((e.hasOwnProperty("changedTouches")?e.changedTouches[0].pageY:e.pageY)-o.props.drawAreaPositionY-o.props.headerHeight)/o.props.sizeRatio;o.setState({mousedown:!0}),o.prevX=n,o.prevY=r,o.x=[n],o.y=[r],o.imageData=t.getImageData(0,0,o.initialWidth,o.initialHeight)},o.handleMouseMove=function(e){var t=o.state.context,n=o.state.wrapperContext,r=o.prevX,i=o.prevY,a=((e.hasOwnProperty("changedTouches")?e.changedTouches[0].pageX:e.pageX)-o.props.drawAreaPositionX)/o.props.sizeRatio,s=((e.hasOwnProperty("changedTouches")?e.changedTouches[0].pageY:e.pageY)-o.props.drawAreaPositionY-o.props.headerHeight)/o.props.sizeRatio;if(o.state.mousedown)if(t.strokeStyle=o.props.color,t.lineWidth=o.props.strokeWidth,t.lineJoin="round",t.lineCap="round",o.props.flagBrush){n.clearRect(0,0,o.initialWidth,o.initialHeight),o.x.push(a),o.y.push(s),t.putImageData(o.imageData,0,0),t.beginPath();for(var u=0;u<o.x.length-1;u++)t.moveTo(o.x[u],o.y[u]),t.lineTo(o.x[u+1],o.y[u+1]);t.stroke(),t.closePath()}else o.props.flagRect?(n.fillStyle=o.props.color,n.clearRect(0,0,o.initialWidth,o.initialHeight),n.fillRect(r,i,a-r,s-i)):o.props.flagCircle?(n.fillStyle=o.props.color,n.clearRect(0,0,o.initialWidth,o.initialHeight),n.beginPath(),n.arc(r,i,ht(a,s,r,i),0,2*Math.PI,!0),n.fill()):o.props.flagLine&&(n.fillStyle=o.props.color,n.clearRect(0,0,o.initialWidth,o.initialHeight),n.strokeStyle=o.props.color,n.lineWidth=o.props.strokeWidth,n.beginPath(),n.moveTo(r,i),n.lineTo(a,s),n.stroke(),n.closePath());else o.props.flagRect||o.props.flagCircle||o.props.flagColorpicker||(n.fillStyle=o.props.color,n.clearRect(0,0,o.initialWidth,o.initialHeight),n.beginPath(),n.arc(a,s,o.props.strokewidth/2,0,2*Math.PI,!0),n.fill())},o.handleMouseUp=function(e){var t=o.canvas,n=o.state.context,r=o.state.wrapperContext,i=o.prevX,a=o.prevY,s=((e.hasOwnProperty("changedTouches")?e.changedTouches[0].pageX:e.pageX)-o.props.drawAreaPositionX)/o.props.sizeRatio,u=((e.hasOwnProperty("changedTouches")?e.changedTouches[0].pageY:e.pageY)-o.props.drawAreaPositionY-o.props.headerHeight)/o.props.sizeRatio,c=o.props.undoManager;r.clearRect(0,0,o.initialWidth,o.initialHeight),o.props.flagRect?(n.fillStyle=o.props.color,n.fillRect(i,a,s-i,u-a)):o.props.flagCircle?(n.fillStyle=o.props.color,n.beginPath(),n.arc(i,a,ht(s,u,i,a),0,2*Math.PI,!0),n.fill()):o.props.flagLine?(n.lineJoin="butt",n.lineCap="butt",n.strokeStyle=o.props.color,n.lineWidth=o.props.strokewidth,n.beginPath(),n.moveTo(i,a),n.lineTo(s,u),n.stroke(),n.closePath()):o.props.flagColorPicker&&o.readColor(s,u),c.execute(null,t.toDataURL("image/png"),n.getImageData(0,0,o.initialWidth,o.initialHeight)),o.props.updateUndoManager(c),o.setState({mousedown:!1}),o.props.visualizeTreeUndo(c.undoStack[0],c.redoStack,o.props.imgSize,c.undoStack[0].stackWidth/2*(o.props.imgSize/2*3))},o.readColor=function(e,t){var n=o.state.context;o.props.updateColor(n.getImageData(e,t,1,1).data.slice(0,3))},o.handleKeyDown=function(e){"z"===e.key&&(e.ctrlKey||e.metaKey)&&e.shiftKey||"Z"===e.key&&(e.ctrlKey||e.metaKey)&&e.shiftKey?o.props.redo():"z"===e.key&&(e.ctrlKey||e.metaKey)?o.props.undo():"¸"===e.key&&e.altKey&&e.shiftKey||"Z"===e.key&&e.altKey&&e.shiftKey?o.props.rebra():("Ω"===e.key&&e.altKey||"z"===e.key&&e.altKey)&&o.props.unbra()},o.clear=function(){var e=o.canvas,t=o.state.context,n=o.props.undoManager;t.fillStyle=o.props.color,t.fillRect(0,0,o.initialWidth,o.initialHeight),o.props.undoManager.execute(null,e.toDataURL("image/png"),t.getImageData(0,0,o.initialWidth,o.initialHeight)),o.props.updateUndoManager(n)},o.updateRender=function(e){var t=o.state.context,n=e.state;t.putImageData(n,0,0)},o.initialWidth=o.props.drawAreaWidth,o.initialHeight=o.props.drawAreaWidth,o.state={mousedown:!1,prevCanvas:null,context:null,wrapperContext:null},o}return Le()(t,e),xe()(t,[{key:"componentDidMount",value:function(){var e=this.canvas,t=this.canvasWrapper,o=e.getContext("2d"),n=t.getContext("2d");e.width=this.props.drawAreaWidth,e.height=this.props.drawAreaWidth,t.width=this.props.drawAreaWidth,t.height=this.props.drawAreaWidth,o.fillStyle="#fff",o.fillRect(0,0,e.width,e.height),this.setState({context:o,wrapperContext:n}),this.props.updateUndoManager(new ct(e.toDataURL("image/png"),o.getImageData(0,0,this.initialWidth,this.initialHeight))),this.props.updateUpdateRenderFunction(this.updateRender),this.props.updateClearFunction(this.clear),window.addEventListener("keydown",this.handleKeyDown)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("keydown",this.handleKeyDown)}},{key:"render",value:function(){var e=this;return Ye.a.createElement("div",{"touch-action":"none",style:{width:this.props.drawAreaWidth,height:this.props.drawAreaWidth+this.props.headerHeight,position:"absolute",top:this.props.drawAreaPositionY,left:this.props.drawAreaPositionX}},Ye.a.createElement(lt,{style:{width:this.props.drawAreaWidth,height:this.props.headerHeight,backgroundColor:"#ddd",position:"absolute",borderTopLeftRadius:5,borderTopRightRadius:5}}),Ye.a.createElement("canvas",{style:{width:this.props.drawAreaWidth,height:this.props.drawAreaWidth,position:"absolute",top:this.props.headerHeight,backgroundColor:"#fff",borderBottomLeftRadius:5,borderBottomRightRadius:5},ref:function(t){e.canvas=t}}),Ye.a.createElement("canvas",{style:{width:this.props.drawAreaWidth,height:this.props.drawAreaWidth,position:"absolute",top:this.props.headerHeight,backgroundColor:"rgba(255,255,255,0)",borderBottomRadius:5},ref:function(t){e.canvasWrapper=t},onMouseDown:this.handleMouseDown,onTouchStart:this.handleMouseDown,onMouseMove:this.handleMouseMove,onTouchMove:this.handleMouseMove,onMouseUp:this.handleMouseUp,onTouchEnd:this.handleMouseUp}))}}]),t}(Ye.a.Component))||f)||f,pt=o(962),gt=o.n(pt),ft=o(36),yt=o.n(ft),vt=Object(Be.b)(function(e){var t=e.state;return{guiAreaPositionX:t.guiAreaPosition.x,guiAreaPositionY:t.guiAreaPosition.y,updateGuiAreaPosition:t.updateGuiAreaPosition}})(y=Object(Be.c)(y=function(e){function t(e){var o;return We()(this,t),(o=Ue()(this,De()(t).call(this,e))).handleMouseAndTouchDown=function(e){document.body.addEventListener("mousemove",o.handleMouseAndTouchMove),document.body.addEventListener("touchmove",o.handleMouseAndTouchMove),document.body.addEventListener("mouseup",o.handleMouseAndTouchUp),document.body.addEventListener("touchend",o.handleMouseAndTouchUp),o.setState({x:"changedTouches"in e?e.changedTouches[0].pageX:e.pageX,y:"changedTouches"in e?e.changedTouches[0].pageY:e.pageY})},o.handleMouseAndTouchMove=function(e){o.props.updateGuiAreaPosition(o.props.guiAreaPositionX+("changedTouches"in e?e.changedTouches[0].pageX:e.pageX)-o.state.x,o.props.guiAreaPositionY+("changedTouches"in e?e.changedTouches[0].pageY:e.pageY)-o.state.y),o.setState({x:"changedTouches"in e?e.changedTouches[0].pageX:e.pageX,y:"changedTouches"in e?e.changedTouches[0].pageY:e.pageY})},o.handleMouseAndTouchUp=function(){document.body.removeEventListener("mousemove",o.handleMouseAndTouchMove),document.body.removeEventListener("touchmove",o.handleMouseAndTouchMove),document.body.removeEventListener("mouseup",o.handleMouseAndTouchUp),document.body.removeEventListener("touchend",o.handleMouseAndTouchUp)},o.state={x:0,y:0},o}return Le()(t,e),xe()(t,[{key:"render",value:function(){return Ye.a.createElement("div",{"touch-action":"none",onMouseDown:this.handleMouseAndTouchDown,onTouchStart:this.handleMouseAndTouchDown,style:this.props.style})}}]),t}(Ye.a.Component))||y)||y,bt=Object(Be.b)(function(e,t){var o=e.state;return{undoManager:o.undoManager,updateRender:o.updateRender,updateVisualizeTreeUndoFunction:o.updateVisualizeTreeUndoFunction,updateUpdateCommandTextFunction:o.updateUpdateCommandTextFunction,imgSize:o.imgSize,guiAreaWidth:o.guiAreaWidth,guiAreaHeight:o.guiAreaHeight,currentStackBackgroundSize:o.currentStackBackgroundSize,guiAreaPositionX:o.guiAreaPosition.x,guiAreaPositionY:o.guiAreaPosition.y,headerHeight:o.headerHeight}})(v=function(e){function t(e){var o;return We()(this,t),(o=Ue()(this,De()(t).call(this,e))).visualizeTreeUndo=function(e,t,n,r){var i=yt()(yt()(o)),a=[],s=[],u=o.lastUndoStack;o.lastUndoStack=o.props.undoManager.lastUndoStack();var c=[3*o.props.imgSize/2,5*o.props.imgSize/4],l=[3*o.props.imgSize/2-o.props.currentStackBackgroundSize/2,5*o.props.imgSize/4-o.props.currentStackBackgroundSize/2];!function e(o,n,r){if(a.push({stack:o,x:n,y:r,width:i.props.imgSize,height:i.props.imgSize}),o==u&&(c=[n+i.props.imgSize/2,r+i.props.imgSize/2]),o==i.props.undoManager.lastUndoStack()&&(i.lastUndoStack=i.props.undoManager.lastUndoStack(),l=[n-(i.props.currentStackBackgroundSize-i.props.imgSize)/2,r-(i.props.currentStackBackgroundSize-i.props.imgSize)/2]),o.nextStack.length>0){var h=-(o.stackWidth-1)/2+(i.props.undoManager.getNextBranchPoint(o.nextStack[0]).stackWidth-1)/2,d=0;o.nextStack.forEach(function(a,u){0!==u&&(h+=(i.props.undoManager.getNextBranchPoint(o.nextStack[u-1]).stackWidth-1)/2+(i.props.undoManager.getNextBranchPoint(o.nextStack[u]).stackWidth-1)/2),d=h+u,s.push({x1:n+i.props.imgSize,y1:r+i.props.imgSize/2,x2:n+i.props.imgSize/2*3,y2:r+i.props.imgSize/2*3*d+i.props.imgSize/2,x3:n+i.props.imgSize+i.props.imgSize/10*3,y3:r+i.props.imgSize/2,x4:n+i.props.imgSize/2*3-i.props.imgSize/10*3,y4:r+i.props.imgSize/2*3*d+i.props.imgSize/2,stroke:i.props.undoManager.undoStack.some(function(e){return e===o.nextStack[u]})?"#f26":t.some(function(e){return e===o.nextStack[u]})?"#4f2":"#24f"}),e(a,n+i.props.imgSize/2*3,r+i.props.imgSize/2*3*d)})}}(e,n,r),o.setState({lastVisualizeUndoStackCoord:l,visualizeUndoStack:a,visualizeBranch:s,visualizeFlowArrow:[c[0],c[1],l[0]+o.props.currentStackBackgroundSize/2,l[1]+o.props.currentStackBackgroundSize/2]})},o.imgHandleClick=function(e){return function(t){o.props.undoManager.recomposeUndoStack(e),o.props.updateRender(e),o.visualizeTreeUndo(o.props.undoManager.undoStack[0],o.props.undoManager.redoStack,o.props.imgSize,o.props.undoManager.undoStack[0].stackWidth/2*(o.props.imgSize/2*3))}},o.handleScroll=function(e){return function(t){e.setState({scrollLeft:this.scrollLeft,scrollTop:this.scrollTop})}},o.updateCommandText=function(e){o.setState({commandText:e})},o.state={visualizeUndoStack:[],lastVisualizeUndoStackCoord:[3*o.props.imgSize/2-o.props.imgSize/2,5*o.props.imgSize/4-o.props.imgSize/2],visualizeBranch:[],visualizeFlowArrow:[0,0,10,10],scrollLeft:0,scrollTop:0,commandText:""},o}return Le()(t,e),xe()(t,[{key:"componentDidMount",value:function(){var e=this;this.props.updateVisualizeTreeUndoFunction(this.visualizeTreeUndo),this.props.updateUpdateCommandTextFunction(this.updateCommandText),setTimeout(function(){e.visualizeTreeUndo(e.props.undoManager.undoStack[0],e.props.undoManager.redoStack,e.props.imgSize,e.props.undoManager.undoStack[0].stackWidth/2*(e.props.imgSize/2*3))},10),this.wrapperDivArea.addEventListener("scroll",this.handleScroll(this))}},{key:"componentWillUnmount",value:function(){this.wrapperDivArea.removeEventListener("scroll",this.handleScroll(this))}},{key:"render",value:function(){var e,t,o=this;return Ye.a.createElement("div",{"touch-action":"none",ref:function(e){return o.wrapperDivArea=e},style:{overflow:"auto",width:this.props.guiAreaWidth,height:this.props.guiAreaHeight+this.props.headerHeight,position:"absolute",top:this.props.guiAreaPositionY,left:this.props.guiAreaPositionX,borderRadius:5}},Ye.a.createElement(vt,{style:{width:this.props.guiAreaWidth,height:this.props.headerHeight,backgroundColor:"#ddd",position:"absolute",left:this.state.scrollLeft,top:this.state.scrollTop}}),Ye.a.createElement("svg",{"touch-action":"auto",style:{width:this.props.guiAreaWidth,height:this.props.guiAreaHeight,backgroundColor:"#111",position:"absolute",left:this.state.scrollLeft,top:this.state.scrollTop+this.props.headerHeight,userSelect:"none"},xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink"},this.state.visualizeBranch.map(function(e,t){var n=Math.min(e.x1,e.x2,e.x3,e.x4),r=Math.max(e.x1,e.x2,e.x3,e.x4),i=Math.min(e.y1,e.y2,e.y3,e.y4),a=Math.max(e.y1,e.y2,e.y3,e.y4);if(n-o.state.scrollLeft<o.props.guiAreaWidth&&r-o.state.scrollLeft>0&&i-o.state.scrollTop<o.props.guiAreaHeight&&a-o.state.scrollTop>0)return Ye.a.createElement("path",{key:t,stroke:e.stroke,strokeWidth:"3",d:"M ".concat(e.x1-o.state.scrollLeft,",").concat(e.y1-o.state.scrollTop,"\n                                C ").concat(e.x3-o.state.scrollLeft,",").concat(e.y3-o.state.scrollTop," ").concat(e.x4-o.state.scrollLeft,",").concat(e.y4-o.state.scrollTop," ").concat(e.x2-o.state.scrollLeft,",").concat(e.y2-o.state.scrollTop)})}),Ye.a.createElement("rect",{x:this.state.lastVisualizeUndoStackCoord[0]-this.state.scrollLeft,y:this.state.lastVisualizeUndoStackCoord[1]-this.state.scrollTop,width:this.props.currentStackBackgroundSize,height:this.props.currentStackBackgroundSize,fill:"#f50"}),this.state.visualizeUndoStack.map(function(e,t){if(e.x-o.state.scrollLeft<o.props.guiAreaWidth&&e.x-o.state.scrollLeft+o.props.imgSize>0&&e.y-o.state.scrollTop<o.props.guiAreaHeight&&e.y-o.state.scrollTop+o.props.imgSize>0)return Ye.a.createElement(Ye.a.Fragment,{key:t},Ye.a.createElement("image",{xlinkHref:e.stack.img,x:e.x-o.state.scrollLeft,y:e.y-o.state.scrollTop,width:o.props.imgSize,height:o.props.imgSize}))}),function(e,t,n,r){var i=180*Math.atan2(r-t,n-e)/Math.PI;if(e!==n||t!==r)return Ye.a.createElement(Ye.a.Fragment,null,Ye.a.createElement("line",{x1:e,y1:t,x2:n,y2:r,stroke:"rgba(70,30,200,0.7)",strokeWidth:o.props.currentStackBackgroundSize}),Ye.a.createElement("polygon",{transform:"translate(".concat(n," ").concat(r,") rotate(").concat(i,")"),fill:"rgba(70,30,200,0.7)",points:"".concat(0,",",-o.props.imgSize," ",0,",").concat(o.props.imgSize," ").concat(o.props.imgSize,",",0)}))}(this.state.visualizeFlowArrow[0]-this.state.scrollLeft,this.state.visualizeFlowArrow[1]-this.state.scrollTop,this.state.visualizeFlowArrow[2]-this.state.scrollLeft,this.state.visualizeFlowArrow[3]-this.state.scrollTop)),(e=Math.max.apply(Math,gt()(o.state.visualizeUndoStack.map(function(e){return e.x}))),t=Math.max.apply(Math,gt()(o.state.visualizeUndoStack.map(function(e){return e.y}))),o.state.visualizeUndoStack.map(function(n,r){if(n.x-o.state.scrollLeft<o.props.guiAreaWidth&&n.x-o.state.scrollLeft+o.props.imgSize>0&&n.y-o.state.scrollTop<o.props.guiAreaHeight&&n.y-o.state.scrollTop+o.props.imgSize>0||n.x===e||n.y===t)return Ye.a.createElement("div",{key:r,style:{position:"absolute",left:n.x,top:n.y+o.props.headerHeight,width:o.props.imgSize,height:o.props.imgSize},onClick:o.imgHandleClick(n.stack),onTouchStart:o.imgHandleClick(n.stack)})})))}}]),t}(Ye.a.Component))||v,mt=Object(Be.b)(function(e){var t=e.state;return{gestureAreaPositionX:t.gestureAreaPosition.x,gestureAreaPositionY:t.gestureAreaPosition.y,updateGestureAreaPosition:t.updateGestureAreaPosition}})(b=Object(Be.c)(b=function(e){function t(e){var o;return We()(this,t),(o=Ue()(this,De()(t).call(this,e))).handleMouseAndTouchDown=function(e){document.body.addEventListener("mousemove",o.handleMouseAndTouchMove),document.body.addEventListener("touchmove",o.handleMouseAndTouchMove),document.body.addEventListener("mouseup",o.handleMouseAndTouchUp),document.body.addEventListener("touchend",o.handleMouseAndTouchUp),o.setState({x:"changedTouches"in e?e.changedTouches[0].pageX:e.pageX,y:"changedTouches"in e?e.changedTouches[0].pageY:e.pageY})},o.handleMouseAndTouchMove=function(e){o.props.updateGestureAreaPosition(o.props.gestureAreaPositionX+("changedTouches"in e?e.changedTouches[0].pageX:e.pageX)-o.state.x,o.props.gestureAreaPositionY+("changedTouches"in e?e.changedTouches[0].pageY:e.pageY)-o.state.y),o.setState({x:"changedTouches"in e?e.changedTouches[0].pageX:e.pageX,y:"changedTouches"in e?e.changedTouches[0].pageY:e.pageY})},o.handleMouseAndTouchUp=function(){document.body.removeEventListener("mousemove",o.handleMouseAndTouchMove),document.body.removeEventListener("touchmove",o.handleMouseAndTouchMove),document.body.removeEventListener("mouseup",o.handleMouseAndTouchUp),document.body.removeEventListener("touchend",o.handleMouseAndTouchUp)},o.state={x:0,y:0},o}return Le()(t,e),xe()(t,[{key:"render",value:function(){return Ye.a.createElement("div",{"touch-action":"none",onMouseDown:this.handleMouseAndTouchDown,onTouchStart:this.handleMouseAndTouchDown,style:this.props.style})}}]),t}(Ye.a.Component))||b)||b,wt=Object(Be.b)(function(e){var t=e.state;return{gestureAreaPositionX:t.gestureAreaPosition.x,gestureAreaPositionY:t.gestureAreaPosition.y,gestureAreaWidth:t.gestureAreaWidth,gestureAreaHeight:t.gestureAreaHeight,undo:t.undo,redo:t.redo,unbra:t.unbra,rebra:t.rebra,headerHeight:t.headerHeight}})(m=Object(Be.c)(m=function(e){function t(e){var o;return We()(this,t),(o=Ue()(this,De()(t).call(this,e))).handleMouseDown=function(e){var t=(e.hasOwnProperty("changedTouches")?e.changedTouches[0].pageX:e.pageX)-o.props.gestureAreaPositionX,n=(e.hasOwnProperty("changedTouches")?e.changedTouches[0].pageY:e.pageY)-o.props.gestureAreaPositionY;o.x=[t],o.y=[n],o.setState({mouseDown:!0}),o.eventNums=[]},o.handleMouseMove=function(e){if(o.state.mouseDown){var t,n=o.state.context,r=(e.hasOwnProperty("changedTouches")?e.changedTouches[0].pageX:e.pageX)-o.props.gestureAreaPositionX,i=(e.hasOwnProperty("changedTouches")?e.changedTouches[0].pageY:e.pageY)-o.props.gestureAreaPositionY;n.strokeStyle="#eee",n.lineWidth=10,n.lineJoin="round",n.lineCap="round",o.x.push(r),o.y.push(i),n.beginPath();for(var a=0;a<o.x.length-1;a++)n.moveTo(o.x[a],o.y[a]),n.lineTo(o.x[a+1],o.y[a+1]);if(n.stroke(),n.closePath(),o.x[o.x.length-1]-o.x[o.x.length-2]>=0&&o.y[o.y.length-1]-o.y[o.y.length-2]>=0?t=Math.abs((o.y[o.y.length-1]-o.y[o.y.length-2])/(o.x[o.x.length-1]-o.x[o.x.length-2]))>1?2:1:o.x[o.x.length-1]-o.x[o.x.length-2]<0&&o.y[o.y.length-1]-o.y[o.y.length-2]>0?t=Math.abs((o.y[o.y.length-1]-o.y[o.y.length-2])/(o.x[o.x.length-1]-o.x[o.x.length-2]))>1?2:3:o.x[o.x.length-1]-o.x[o.x.length-2]<=0&&o.y[o.y.length-1]-o.y[o.y.length-2]<=0?t=Math.abs((o.y[o.y.length-1]-o.y[o.y.length-2])/(o.x[o.x.length-1]-o.x[o.x.length-2]))>1?4:3:o.x[o.x.length-1]-o.x[o.x.length-2]>0&&o.y[o.y.length-1]-o.y[o.y.length-2]<0&&(t=Math.abs((o.y[o.y.length-1]-o.y[o.y.length-2])/(o.x[o.x.length-1]-o.x[o.x.length-2]))>1?4:1),o.eventNums.push(t),o.eventNums.length%10==0){var s=o.eventNums.slice(o.eventNums.length-10,o.eventNums.length).reduce(function(e,t){return e+t},0)/10;switch(Math.round(s)){case 1:o.props.redo();break;case 2:o.props.rebra();break;case 3:o.props.undo();break;case 4:o.props.unbra()}}}},o.handleMouseUp=function(){var e=o.state.context;e.fillStyle="#111",e.fillRect(0,0,o.props.gestureAreaWidth,o.props.gestureAreaHeight),o.setState({mouseDown:!1})},o.state={context:null,mouseDown:!1},o.eventNums=[],o}return Le()(t,e),xe()(t,[{key:"componentDidMount",value:function(){var e=this.canvas;e.width=this.props.gestureAreaWidth,e.height=this.props.gestureAreaHeight;var t=e.getContext("2d");t.fillStyle="#111",t.fillRect(0,0,e.width,e.height),this.setState({context:t})}},{key:"render",value:function(){var e=this;return Ye.a.createElement("div",{"touch-action":"none",style:{width:this.props.gestureAreaWidth,height:this.props.gestureAreaHeight+this.props.headerHeight,position:"absolute",top:this.props.gestureAreaPositionY,left:this.props.gestureAreaPositionX}},Ye.a.createElement(mt,{"touch-action":"auto",style:{width:this.props.gestureAreaWidth,height:this.props.headerHeight,backgroundColor:"#ddd",position:"absolute",borderTopLeftRadius:5,borderTopRightRadius:5}}),Ye.a.createElement("canvas",{ref:function(t){e.canvas=t},onMouseDown:this.handleMouseDown,onTouchStart:this.handleMouseDown,onMouseMove:this.handleMouseMove,onTouchMove:this.handleMouseMove,onMouseUp:this.handleMouseUp,onTouchEnd:this.handleMouseUp,style:{backgroundColor:"#fff",width:this.props.gestureAreaWidth,height:this.props.gestureAreaHeight,borderRadius:5}}))}}]),t}(Ye.a.Component))||m)||m,At=Object(Be.b)(function(e,t){var o=e.state;return{headerHeight:o.headerHeight,windowWidth:o.windowWidth,windowHeight:o.windowHeight,windowResize:o.windowResize,drawAreaWidth:o.drawAreaWidth,propertyAreaWidth:o.propertyAreaWidth,guiAreaWidth:o.guiAreaWidth}})(w=function(e){function t(){return We()(this,t),Ue()(this,De()(t).apply(this,arguments))}return Le()(t,e),xe()(t,[{key:"componentDidMount",value:function(){this.props.windowResize(),window.addEventListener("resize",this.props.windowResize)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("resize",this.props.windowResize)}},{key:"render",value:function(){return Ye.a.createElement("div",{"touch-action":"none",style:{width:this.props.windowWidth,height:this.props.windowHeight-this.props.headerHeight,backgroundColor:"#222"}},Ye.a.createElement(ut,{style:{width:this.props.propertyAreaWidth,height:this.props.windowHeight-this.props.headerHeight,backgroundColor:"#aaa",float:"left"}}),Ye.a.createElement(bt,null),Ye.a.createElement(wt,null),Ye.a.createElement(dt,null))}}]),t}(Ye.a.Component))||w,kt=o(26),St=o.n(kt),Tt=o(17),Et=o.n(Tt),Mt=(o(35),o(7)),zt=(A=Mt.d.bound,k=Mt.d.bound,S=Mt.d.bound,T=Mt.d.bound,E=Mt.d.bound,M=Mt.d.bound,z=Mt.d.bound,P=Mt.d.bound,W=Mt.d.bound,R=Mt.d.bound,x=Mt.d.bound,O=Mt.d.bound,U=Mt.d.bound,C=Mt.d.bound,D=Mt.d.bound,H=Mt.d.bound,L=Mt.d.bound,F=Mt.d.bound,Y=Mt.d.bound,B=Mt.d.bound,j=Mt.d.bound,X=Mt.d.bound,I=Mt.d.bound,G=Mt.d.bound,N=Mt.d.bound,K=Mt.d.bound,V=Mt.d.bound,J=Mt.d.bound,q=Mt.d.bound,Z=function(){function e(){We()(this,e),St()(this,"headerHeight",Q,this),St()(this,"windowWidth",$,this),St()(this,"windowHeight",_,this),St()(this,"propertyAreaWidth",ee,this),St()(this,"initialDrawAreaWidth",te,this),St()(this,"drawAreaWidth",oe,this),St()(this,"drawAreaPosition",ne,this),St()(this,"guiAreaWidth",re,this),St()(this,"guiAreaHeight",ie,this),St()(this,"guiAreaPosition",ae,this),St()(this,"gestureAreaWidth",se,this),St()(this,"gestureAreaHeight",ue,this),St()(this,"gestureAreaPosition",ce,this),St()(this,"imgSize",le,this),St()(this,"currentStackBackgroundSize",he,this),St()(this,"undoManager",de,this),St()(this,"visualizeTreeUndo",pe,this),St()(this,"updateCommandText",ge,this),St()(this,"updateRender",fe,this),St()(this,"strokeWidth",ye,this),St()(this,"previewStrokeWidth",ve,this),St()(this,"sizeRatio",be,this),St()(this,"color",me,this),St()(this,"colorArray",we,this),St()(this,"opacity",Ae,this),St()(this,"opaityAreaRender",ke,this),St()(this,"opacityAreaGlContext",Se,this),St()(this,"opacityAreaUniLocation",Te,this),St()(this,"flag",Ee,this),St()(this,"background",Me,this),St()(this,"clear",ze,this)}return xe()(e,[{key:"updateWindowWidth",value:function(e){this.windowWidth=e}},{key:"updateWindowHeight",value:function(e){this.windowHeight=e}},{key:"updateDrawAreaWidth",value:function(e){this.drawAreaWidth=e}},{key:"updateDrawAreaPosition",value:function(e,t){this.drawAreaPosition.x=e,this.drawAreaPosition.y=t}},{key:"updateGuiAreaPosition",value:function(e,t){this.guiAreaPosition.x=e,this.guiAreaPosition.y=t}},{key:"updateGestureAreaPosition",value:function(e,t){this.gestureAreaPosition.x=e,this.gestureAreaPosition.y=t}},{key:"windowResize",value:function(){this.windowWidth=window.innerWidth,this.windowHeight=window.innerHeight}},{key:"updateUndoManager",value:function(e){this.undoManager=e}},{key:"updateVisualizeTreeUndoFunction",value:function(e){this.visualizeTreeUndo=e}},{key:"updateUpdateCommandTextFunction",value:function(e){this.updateCommandText=e}},{key:"undo",value:function(){this.undoManager.undo(),this.visualizeTreeUndo(this.undoManager.undoStack[0],this.undoManager.redoStack,this.imgSize,this.undoManager.undoStack[0].stackWidth/2*(this.imgSize/2*3));var e=this.undoManager;this.updateRender(e.lastUndoStack()),this.updateCommandText("undo"),this.updateUndoManager(e)}},{key:"redo",value:function(){this.undoManager.redo(),this.visualizeTreeUndo(this.undoManager.undoStack[0],this.undoManager.redoStack,this.imgSize,this.undoManager.undoStack[0].stackWidth/2*(this.imgSize/2*3));var e=this.undoManager;this.updateRender(e.lastUndoStack()),this.updateCommandText("redo"),this.updateUndoManager(e)}},{key:"unbra",value:function(){this.undoManager.unbra(),this.visualizeTreeUndo(this.undoManager.undoStack[0],this.undoManager.redoStack,this.imgSize,this.undoManager.undoStack[0].stackWidth/2*(this.imgSize/2*3));var e=this.undoManager;this.updateRender(e.lastUndoStack()),this.updateCommandText("unbra"),this.updateUndoManager(e)}},{key:"rebra",value:function(){this.undoManager.rebra(),this.visualizeTreeUndo(this.undoManager.undoStack[0],this.undoManager.redoStack,this.imgSize,this.undoManager.undoStack[0].stackWidth/2*(this.imgSize/2*3));var e=this.undoManager;this.updateRender(e.lastUndoStack()),this.updateCommandText("rebra"),this.updateUndoManager(e)}},{key:"updateUpdateRenderFunction",value:function(e){this.updateRender=e}},{key:"updateSizeRatio",value:function(e){this.strokeWidth=this.strokeWidth,this.previewStrokeWidth=this.strokeWidth*e,this.sizeRatio=e}},{key:"updateStrokeWidth",value:function(e){this.strokeWidth=e,this.previewStrokeWidth=e*this.sizeRatio}},{key:"updateColor",value:function(e){this.color="rgba(".concat(e[0],",").concat(e[1],",").concat(e[2],",").concat(this.opacity,")"),this.colorArray=e,this.opacityAreaRender(this.opacityAreaGlContext,e.map(function(e){return e/255}),this.opacityAreaUniLocation)}},{key:"updateOpacity",value:function(e){this.opacity=e,this.color="rgba(".concat(this.colorArray[0],",").concat(this.colorArray[1],",").concat(this.colorArray[2],",").concat(e,")")}},{key:"updateOpacityAreaRender",value:function(e){this.opacityAreaRender=e}},{key:"updateOpacityAreaGlContext",value:function(e){this.opacityAreaGlContext=e}},{key:"updateOpacityAreaUniLocation",value:function(e){this.opacityAreaUniLocation=e}},{key:"brushEvent",value:function(){for(var e in this.flag)this.flag[e]="brush"===e;for(var t in this.background)this.background[t]="brush"===t?"#eee":"#bbb"}},{key:"rectEvent",value:function(){for(var e in this.flag)this.flag[e]="rect"===e;for(var t in this.background)this.background[t]="rect"===t?"#eee":"#bbb"}},{key:"circleEvent",value:function(){for(var e in this.flag)this.flag[e]="circle"===e;for(var t in this.background)this.background[t]="circle"===t?"#eee":"#bbb"}},{key:"lineEvent",value:function(){for(var e in this.flag)this.flag[e]="line"===e;for(var t in this.background)this.background[t]="line"===t?"#eee":"#bbb"}},{key:"colorPickerEvent",value:function(){for(var e in this.flag)this.flag[e]="colorPicker"===e;for(var t in this.background)this.background[t]="colorPicker"===t?"#eee":"#bbb"}},{key:"clearEvent",value:function(){for(var e in this.flag)this.flag[e]="clear"===e;for(var t in this.background)this.background[t]="clear"===t?"#eee":"#bbb";this.clear()}},{key:"updateClearFunction",value:function(e){this.clear=e}}]),e}(),Q=Et()(Z.prototype,"headerHeight",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 20}}),$=Et()(Z.prototype,"windowWidth",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return window.innerWidth}}),Et()(Z.prototype,"updateWindowWidth",[A],Object.getOwnPropertyDescriptor(Z.prototype,"updateWindowWidth"),Z.prototype),_=Et()(Z.prototype,"windowHeight",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return window.innerHeight}}),Et()(Z.prototype,"updateWindowHeight",[k],Object.getOwnPropertyDescriptor(Z.prototype,"updateWindowHeight"),Z.prototype),ee=Et()(Z.prototype,"propertyAreaWidth",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 100}}),te=Et()(Z.prototype,"initialDrawAreaWidth",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return this.windowHeight<this.windowWidth?2*this.windowHeight/3:this.windowWidth-this.propertyAreaWidth-20}}),oe=Et()(Z.prototype,"drawAreaWidth",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return this.initialDrawAreaWidth}}),Et()(Z.prototype,"updateDrawAreaWidth",[S],Object.getOwnPropertyDescriptor(Z.prototype,"updateDrawAreaWidth"),Z.prototype),ne=Et()(Z.prototype,"drawAreaPosition",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return{x:this.propertyAreaWidth+10,y:this.headerHeight+10}}}),Et()(Z.prototype,"updateDrawAreaPosition",[T],Object.getOwnPropertyDescriptor(Z.prototype,"updateDrawAreaPosition"),Z.prototype),re=Et()(Z.prototype,"guiAreaWidth",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return this.windowWidth>this.windowHeight?this.windowWidth-this.drawAreaPosition.x-this.drawAreaWidth-20:this.drawAreaWidth}}),ie=Et()(Z.prototype,"guiAreaHeight",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return this.windowWidth>this.windowHeight?this.windowHeight-this.headerHeight-this.headerHeight-20:(this.windowHeight-this.drawAreaWidth)/2}}),ae=Et()(Z.prototype,"guiAreaPosition",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return this.windowWidth>this.windowHeight?{x:this.drawAreaPosition.x+this.drawAreaWidth+10,y:this.headerHeight+10}:{x:this.drawAreaPosition.x,y:this.drawAreaPosition.y+this.drawAreaWidth+this.headerHeight+10}}}),Et()(Z.prototype,"updateGuiAreaPosition",[E],Object.getOwnPropertyDescriptor(Z.prototype,"updateGuiAreaPosition"),Z.prototype),se=Et()(Z.prototype,"gestureAreaWidth",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return this.drawAreaWidth}}),ue=Et()(Z.prototype,"gestureAreaHeight",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return this.windowWidth>this.windowHeight?this.windowHeight-this.drawAreaWidth-3*this.headerHeight-10:this.windowHeight-this.drawAreaWidth-this.guiAreaHeight-3*this.headerHeight-40}}),ce=Et()(Z.prototype,"gestureAreaPosition",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return this.windowWidth>this.windowHeight?{x:this.drawAreaPosition.x,y:this.drawAreaPosition.y+this.drawAreaWidth+this.headerHeight+10}:{x:this.drawAreaPosition.x,y:this.guiAreaPosition.y+this.guiAreaHeight+this.headerHeight+10}}}),Et()(Z.prototype,"updateGestureAreaPosition",[M],Object.getOwnPropertyDescriptor(Z.prototype,"updateGestureAreaPosition"),Z.prototype),Et()(Z.prototype,"windowResize",[z],Object.getOwnPropertyDescriptor(Z.prototype,"windowResize"),Z.prototype),le=Et()(Z.prototype,"imgSize",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 40}}),he=Et()(Z.prototype,"currentStackBackgroundSize",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return this.imgSize+10}}),de=Et()(Z.prototype,"undoManager",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Et()(Z.prototype,"updateUndoManager",[P],Object.getOwnPropertyDescriptor(Z.prototype,"updateUndoManager"),Z.prototype),pe=Et()(Z.prototype,"visualizeTreeUndo",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Et()(Z.prototype,"updateVisualizeTreeUndoFunction",[W],Object.getOwnPropertyDescriptor(Z.prototype,"updateVisualizeTreeUndoFunction"),Z.prototype),ge=Et()(Z.prototype,"updateCommandText",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Et()(Z.prototype,"updateUpdateCommandTextFunction",[R],Object.getOwnPropertyDescriptor(Z.prototype,"updateUpdateCommandTextFunction"),Z.prototype),Et()(Z.prototype,"undo",[x],Object.getOwnPropertyDescriptor(Z.prototype,"undo"),Z.prototype),Et()(Z.prototype,"redo",[O],Object.getOwnPropertyDescriptor(Z.prototype,"redo"),Z.prototype),Et()(Z.prototype,"unbra",[U],Object.getOwnPropertyDescriptor(Z.prototype,"unbra"),Z.prototype),Et()(Z.prototype,"rebra",[C],Object.getOwnPropertyDescriptor(Z.prototype,"rebra"),Z.prototype),fe=Et()(Z.prototype,"updateRender",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Et()(Z.prototype,"updateUpdateRenderFunction",[D],Object.getOwnPropertyDescriptor(Z.prototype,"updateUpdateRenderFunction"),Z.prototype),ye=Et()(Z.prototype,"strokeWidth",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 20}}),ve=Et()(Z.prototype,"previewStrokeWidth",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 20}}),be=Et()(Z.prototype,"sizeRatio",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Et()(Z.prototype,"updateSizeRatio",[H],Object.getOwnPropertyDescriptor(Z.prototype,"updateSizeRatio"),Z.prototype),Et()(Z.prototype,"updateStrokeWidth",[L],Object.getOwnPropertyDescriptor(Z.prototype,"updateStrokeWidth"),Z.prototype),me=Et()(Z.prototype,"color",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"rgba(0,0,0,1.0)"}}),we=Et()(Z.prototype,"colorArray",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[0,0,0]}}),Et()(Z.prototype,"updateColor",[F],Object.getOwnPropertyDescriptor(Z.prototype,"updateColor"),Z.prototype),Ae=Et()(Z.prototype,"opacity",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Et()(Z.prototype,"updateOpacity",[Y],Object.getOwnPropertyDescriptor(Z.prototype,"updateOpacity"),Z.prototype),ke=Et()(Z.prototype,"opaityAreaRender",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Et()(Z.prototype,"updateOpacityAreaRender",[B],Object.getOwnPropertyDescriptor(Z.prototype,"updateOpacityAreaRender"),Z.prototype),Se=Et()(Z.prototype,"opacityAreaGlContext",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Et()(Z.prototype,"updateOpacityAreaGlContext",[j],Object.getOwnPropertyDescriptor(Z.prototype,"updateOpacityAreaGlContext"),Z.prototype),Te=Et()(Z.prototype,"opacityAreaUniLocation",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Et()(Z.prototype,"updateOpacityAreaUniLocation",[X],Object.getOwnPropertyDescriptor(Z.prototype,"updateOpacityAreaUniLocation"),Z.prototype),Ee=Et()(Z.prototype,"flag",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return{brush:!0,rect:!1,circle:!1,line:!1,colorPicker:!1,clear:!1}}}),Me=Et()(Z.prototype,"background",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return{brush:"#eee",rect:"#bbb",circle:"#bbb",line:"#bbb",colorPicker:"#bbb",clear:"#bbb"}}}),Et()(Z.prototype,"brushEvent",[I],Object.getOwnPropertyDescriptor(Z.prototype,"brushEvent"),Z.prototype),Et()(Z.prototype,"rectEvent",[G],Object.getOwnPropertyDescriptor(Z.prototype,"rectEvent"),Z.prototype),Et()(Z.prototype,"circleEvent",[N],Object.getOwnPropertyDescriptor(Z.prototype,"circleEvent"),Z.prototype),Et()(Z.prototype,"lineEvent",[K],Object.getOwnPropertyDescriptor(Z.prototype,"lineEvent"),Z.prototype),Et()(Z.prototype,"colorPickerEvent",[V],Object.getOwnPropertyDescriptor(Z.prototype,"colorPickerEvent"),Z.prototype),Et()(Z.prototype,"clearEvent",[J],Object.getOwnPropertyDescriptor(Z.prototype,"clearEvent"),Z.prototype),ze=Et()(Z.prototype,"clear",[Mt.l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Et()(Z.prototype,"updateClearFunction",[q],Object.getOwnPropertyDescriptor(Z.prototype,"updateClearFunction"),Z.prototype),Z),Pt=(o(305),o(966)),Wt=o.n(Pt);o.d(t,"default",function(){return xt});var Rt={state:new zt},xt=function(e){function t(){return We()(this,t),Ue()(this,De()(t).apply(this,arguments))}return Le()(t,e),xe()(t,[{key:"componentDidMount",value:function(){Wt.a.use()}},{key:"componentWillUnmount",value:function(){Wt.a.unuse()}},{key:"render",value:function(){return Ye.a.createElement(Be.a,Rt,Ye.a.createElement(Ye.a.Fragment,null,Ye.a.createElement(je,null),Ye.a.createElement(At,null)))}}]),t}(Ye.a.Component)},958:function(e,t){e.exports=function(){return["attribute vec3 position;","void main(void){","    gl_Position = vec4(position, 1.0);","}"].join("\n")}},959:function(e,t){e.exports=function(){return["precision mediump float;","uniform vec2 resolution;","#define PI 3.141592","vec3 hsv2rgb(vec3 c){","    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);","    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);","    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);","}","void main(void){","    vec2 p = (gl_FragCoord.xy * 2.0 - resolution) / min(resolution.x, resolution.y);             ","    vec3 color = step(length(p),1.0)*(0.03/length(p)+hsv2rgb(vec3(atan(p.x,p.y)/2.0/PI,length(p),1.0)));\t    ","    gl_FragColor=vec4(color,1.0);","}"].join("\n")}},960:function(e,t){e.exports=function(){return["attribute vec3 position;","void main(void){","    gl_Position = vec4(position, 1.0);","}"].join("\n")}},961:function(e,t){e.exports=function(){return["precision mediump float;","uniform vec2 resolution;","uniform vec3 color;","#define PI 3.141592","void main(void){","    vec2 p = (gl_FragCoord.xy ) / resolution.x;         ","    vec3 c=(mod(p.x,0.1)-0.05)*(mod(p.y,0.1)-0.05)<0.0?vec3(1.0):vec3(0.5);    ","    gl_FragColor=vec4(length(color)<0.01?c*0.2:c*color,p.x);","}"].join("\n")}},962:function(e,t,o){var n=o(963),r=o(964),i=o(965);e.exports=function(e){return n(e)||r(e)||i()}},963:function(e,t){e.exports=function(e){if(Array.isArray(e)){for(var t=0,o=new Array(e.length);t<e.length;t++)o[t]=e[t];return o}}},964:function(e,t){e.exports=function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}},965:function(e,t){e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}},966:function(e,t,o){var n,r=0,i=o(967);"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(t.locals=i.locals),t.use=t.ref=function(){return r++||(n=o(23)(i,{hmr:!0})),t},t.unuse=t.unref=function(){r>0&&!--r&&(n(),n=null)}},967:function(e,t,o){(e.exports=o(22)(!1)).push([e.i,"body {\n  margin: 0;\n  padding: 0;\n  overflow: hidden; }\n\n#root {\n  font-size: 0; }\n",""])}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,